std.error = std.error.mi),
.id = "method") %>%
mutate(method = factor(method, levels = c("orig", "mult_imp"),
labels = c("Listwise deletion", "Multiple imputation")),
term = factor(term, levels = c("(Intercept)", "Age",
"Female", "Educ"),
labels = c("Intercept", "Age", "Female",
"Educ"))) # %>%
to_plot
to_plot <- bind_rows(orig = tidy(lm_init_biden),
full_imp = mi.meld.plus(models_puted) %>%
rename(estimate = estimate.mi,
std.error = std.error.mi),
trans_imp = mi.meld.plus(models_puted) %>%
rename(estimate = estimate.mi,
std.error = std.error.mi),
.id = "method") # %>%
to_plot
to_plot <- bind_rows(orig = tidy(lm_init_biden),
mult_imp = mi.meld.plus(models_puted) %>%
rename(estimate = estimate.mi,
std.error = std.error.mi),
.id = "method")  %>%
mutate(method = factor(method, levels = c("orig", "mult_imp"),
labels = c("Listwise deletion", "Multiple imputation")),
term = factor(term, levels = c("(Intercept)", "Age",
"Female", "Educ"),
labels = c("Intercept", "Age", "Female",
"Educ"))) %>%
filter(term != "Intercept")
to_plot
to_plot <- bind_rows(orig = tidy(lm_init_biden),
mult_imp = mi.meld.plus(models_puted) %>%
rename(estimate = estimate.mi,
std.error = std.error.mi),
.id = "method")  # %>%
to_plot
mi.meld.plus(models_puted)
broom::tidy(lm_init_biden) %>%
left_join(mi.meld.plus(models_puted)) %>%
select(-statistic, -p.value)
biden_puted <- amelia(preds,
sqrts = c("age", "educ"),
noms = "female")
models_puted <- data_frame(data = biden_puted$imputations) %>%
mutate(model = map(data, ~ lm(biden ~ sqrt(age) +
sqrt(educ) + female,
data = .x)),
coef = map(model, broom::tidy)) %>%
unnest(coef, .id = "id")
mi.meld.plus <- function(df_tidy){
# transform data into appropriate matrix shape
coef.out <- df_tidy %>%
select(id:estimate) %>%
spread(term, estimate) %>%
select(-id)
se.out <- df_tidy %>%
select(id, term, std.error) %>%
spread(term, std.error) %>%
select(-id)
combined.results <- mi.meld(q = coef.out, se = se.out)
data_frame(term = colnames(combined.results$q.mi),
estimate.mi = combined.results$q.mi[1, ],
std.error.mi = combined.results$se.mi[1, ])
}
broom::tidy(lm_init_biden) %>%
left_join(mi.meld.plus(models_puted)) %>%
select(-statistic, -p.value)
tidy(lm_init_biden)
broom::tidy(lm_init_biden) %>%
left_join(mi.meld.plus(models_puted)) %>%
select(-statistic, -p.value)
models_puted
knitr::opts_chunk$set(message = FALSE,
warning = FALSE,
echo = FALSE)
library(tidyverse)
library(purrr)
library(lmtest)
library(car)
library(MVN)
library(Amelia)
library(broom)
library(forcats)
theme_set(theme_minimal())
biden_dat <- read_csv("biden.csv") %>%
mutate(obs_num = as.numeric(rownames(.)))
biden_omit <- biden_dat %>%
na.omit()
(lm_init_biden <- biden_omit %>%
lm(biden ~ age + female + educ, data = .))
infl_bar <- 4 / (nrow(biden_omit) - length(coef(lm_init_biden)) - 1 -1)
biden_nostics <- biden_omit %>%
mutate(lev_hat = hatvalues(lm_init_biden),
discrep_student = rstudent(lm_init_biden),
infl_cook = cooks.distance(lm_init_biden))
all_weird <- biden_nostics %>%
filter(lev_hat >= 2 * mean(lev_hat) |
abs(discrep_student) > 2 |
infl_cook > infl_bar) %>%
mutate(high_cooks = ifelse(infl_cook > infl_bar, "high_cooks", "otherwise"))
# Bubble Plot
ggplot(all_weird, aes(lev_hat, discrep_student)) +
geom_hline(yintercept = 0, linetype = 2) +
geom_point(aes(size = infl_cook, color = high_cooks), shape = 1) +
scale_size_continuous(range = c(1, 20)) +
geom_vline(xintercept = 2 * mean(biden_nostics$lev_hat), color = "red", linetype = "dashed") +
geom_hline(yintercept = 2, color = "red", linetype = "dashed") +
geom_hline(yintercept = -2, color = "red", linetype = "dashed") +
labs(title = "Bubble Plot",
subtitle = paste(sprintf("All Observations (%i) with High Leverage, Discrepancy, or Influence\n",
nrow(all_weird)),
"Blue Indicates High Cooks D (Influence)"),
x = "Leverage",
y = "Studentized residual") +
scale_color_manual(values = c("high_cooks" = "blue", "otherwise" = "black")) +
theme(legend.position = "none")
biden_nostics <- biden_nostics %>%
mutate(`Unusual or Influential` = ifelse(obs_num %in% all_weird$obs_num, "Yes", "No"))
biden_nostics %>%
ggplot(aes(age, fill = `Unusual or Influential`)) +
geom_histogram(bins = 10) +
labs(title = "Age",
subtitle = "All Observations with High Leverage, Discrepancy, or Influence",
x = "Age",
y = "Count")
biden_nostics %>%
ggplot(aes(biden, fill = `Unusual or Influential`)) +
geom_histogram(bins = 10) +
labs(title = "Biden Warmth Score",
subtitle = "All Observations with High Leverage, Discrepancy, or Influence",
x = "Score",
y = "Count")
biden_nostics %>%
mutate(female = ifelse(female == 1, "Female", "Male")) %>%
ggplot(aes(female, fill = `Unusual or Influential`)) +
geom_histogram(stat = "count", bins = 10) +
labs(title = "Gender",
subtitle = "All Observations with High Leverage, Discrepancy, or Influence",
x = "Gender",
y = "Count")
biden_nostics %>%
mutate(party = ifelse(dem == 1, "Democrat",
ifelse(rep == 1, "Republican",
"Independent"))) %>%
ggplot(aes(party, fill = `Unusual or Influential`)) +
geom_histogram(stat = "count", bins = 10) +
labs(title = "Party Affiliation",
subtitle = "All Observations with High Leverage, Discrepancy, or Influence",
x = "Party",
y = "Count")
car::qqPlot(lm_init_biden, main = "Normal Quantile Plot for Studentized Residuals of Initial Linear Model",
ylab = "Studentized Residuals")
tukey_biden <- function(power){
if (power < 0){
temp_biden <- biden_omit %>%
mutate(biden_power = - 1 / (biden ^ power))
biden_lm_power <- temp_biden %>%
lm(biden_power ~ age + female + educ, data = .)
} else {
temp_biden <- biden_omit %>%
mutate(biden_power = (biden ^ power))
biden_lm_power <- temp_biden %>%
lm(biden_power ~ age + female + educ, data = .)
}
car::qqPlot(biden_lm_power, main =
sprintf("Normal QQ Plot for Linear Model with Power Ladder (%.1f)", power),
ylab = "Studentized Residuals")
}
powers <- c(3, 2, -1.5, -2)
for (power in powers){
tukey_biden(power)
}
bptest(lm_init_biden)
car::vif(lm_init_biden)
(lm_inter_biden <- biden_omit %>%
lm(biden ~ age + educ + age * educ, data = .))
linearHypothesis(lm_inter_biden, "age + age:educ")
linearHypothesis(lm_inter_biden, "educ + age:educ")
preds <- biden_dat %>%
select(biden, age, educ, female)
hzTest(preds %>%
select(-c(biden, female)))
uniNorm(preds %>%
na.omit() %>%
select(-c(biden, female), type = "SQ", desc = FALSE))
biden_puted <- amelia(preds,
sqrts = c("age", "educ"),
noms = "female")
biden_puted <- amelia(preds,
sqrts = c("age", "educ"),
noms = "female")
models_puted <- data_frame(data = biden_puted$imputations) %>%
mutate(model = map(data, ~ lm(biden ~ sqrt(age) +
sqrt(educ) + female,
data = .x)),
coef = map(model, broom::tidy)) %>%
unnest(coef, .id = "id")
mi.meld.plus <- function(df_tidy){
# transform data into appropriate matrix shape
coef.out <- df_tidy %>%
select(id:estimate) %>%
spread(term, estimate) %>%
select(-id)
se.out <- df_tidy %>%
select(id, term, std.error) %>%
spread(term, std.error) %>%
select(-id)
combined.results <- mi.meld(q = coef.out, se = se.out)
data_frame(term = colnames(combined.results$q.mi),
estimate.mi = combined.results$q.mi[1, ],
std.error.mi = combined.results$se.mi[1, ])
}
broom::tidy(lm_init_biden) %>%
left_join(mi.meld.plus(models_puted)) %>%
select(-statistic, -p.value)
models_puted <- data_frame(data = biden_puted$imputations) %>%
mutate(model = map(data, ~ lm(biden ~ age +
educ + female,
data = .x)),
coef = map(model, broom::tidy)) %>%
unnest(coef, .id = "id")
mi.meld.plus <- function(df_tidy){
# transform data into appropriate matrix shape
coef.out <- df_tidy %>%
select(id:estimate) %>%
spread(term, estimate) %>%
select(-id)
se.out <- df_tidy %>%
select(id, term, std.error) %>%
spread(term, std.error) %>%
select(-id)
combined.results <- mi.meld(q = coef.out, se = se.out)
data_frame(term = colnames(combined.results$q.mi),
estimate.mi = combined.results$q.mi[1, ],
std.error.mi = combined.results$se.mi[1, ])
}
broom::tidy(lm_init_biden) %>%
left_join(mi.meld.plus(models_puted)) %>%
select(-statistic, -p.value)
to_plot <- bind_rows(orig = tidy(lm_init_biden),
mult_imp = mi.meld.plus(models_puted) %>%
rename(estimate = estimate.mi,
std.error = std.error.mi),
.id = "method")  # %>%
to_plot <- bind_rows(orig = tidy(lm_init_biden),
mult_imp = mi.meld.plus(models_puted) %>%
rename(estimate = estimate.mi,
std.error = std.error.mi),
.id = "method") %>%
mutate(method = factor(method, levels = c("orig", "mult_imp"),
labels = c("Listwise deletion", "Multiple imputation")),
term = factor(term, levels = c("(Intercept)", "Age",
"Female", "Educ"),
labels = c("Intercept", "Age", "Female",
"Educ"))) %>%
filter(term != "Intercept")
to_plot %>%
ggplot(aes(fct_rev(term), estimate, color = fct_rev(method),
ymin = estimate - 1.96 * std.error,
ymax = estimate + 1.96 * std.error)) +
geom_hline(yintercept = 0, linetype = 2) +
geom_pointrange(position = position_dodge(.75)) +
coord_flip() +
scale_color_discrete(guide = guide_legend(reverse = TRUE)) +
labs(title = "Comparing regression results",
subtitle = "Omitting intercept from plot",
x = NULL,
y = "Estimated parameter",
color = NULL) +
theme(legend.position = "bottom")
to_plot
broom::tidy(lm_init_biden) %>%
left_join(mi.meld.plus(models_puted)) %>%
select(-statistic, -p.value)
mi.meld.plus(models_puted)
to_plot <- bind_rows(orig = tidy(lm_init_biden),
mult_imp = mi.meld.plus(models_puted) %>%
rename(estimate = estimate.mi,
std.error = std.error.mi),
.id = "method") # %>%
to_plot
tidy(lm_init_biden)
mi.meld.plus(models_puted)
to_plot <- bind_rows(orig = tidy(lm_init_biden),
mult_imp = mi.meld.plus(models_puted) %>%
rename(estimate = estimate.mi,
std.error = std.error.mi),
.id = "method") # %>%
to_plot
factor(method, levels = c("orig", "mult_imp"),
labels = c("Listwise deletion", "Multiple imputation"))
to_plot <- bind_rows(orig = tidy(lm_init_biden),
mult_imp = mi.meld.plus(models_puted) %>%
rename(estimate = estimate.mi,
std.error = std.error.mi),
.id = "method") # %>%
to_plot
mutate(method = factor(method, levels = c("orig", "mult_imp"),
labels = c("Listwise deletion", "Multiple imputation")),
term = factor(term, levels = c("(Intercept)", "age",
"female", "educ"),
labels = c("Intercept", "Age", "Female",
"Educ"))) %>%
filter(term != "Intercept")
to_plot <- bind_rows(orig = tidy(lm_init_biden),
mult_imp = mi.meld.plus(models_puted) %>%
rename(estimate = estimate.mi,
std.error = std.error.mi),
.id = "method") # %>%
to_plot <- bind_rows(orig = tidy(lm_init_biden),
mult_imp = mi.meld.plus(models_puted) %>%
rename(estimate = estimate.mi,
std.error = std.error.mi),
.id = "method") %>%
mutate(method = factor(method, levels = c("orig", "mult_imp"),
labels = c("Listwise deletion", "Multiple imputation")),
term = factor(term, levels = c("(Intercept)", "age",
"female", "educ"),
labels = c("Intercept", "Age", "Female",
"Educ"))) %>%
filter(term != "Intercept")
to_plot
to_plot %>%
ggplot(aes(fct_rev(term), estimate, color = fct_rev(method),
ymin = estimate - 1.96 * std.error,
ymax = estimate + 1.96 * std.error)) +
geom_hline(yintercept = 0, linetype = 2) +
geom_pointrange(position = position_dodge(.75)) +
coord_flip() +
scale_color_discrete(guide = guide_legend(reverse = TRUE)) +
labs(title = "Comparing regression results",
subtitle = "Omitting intercept from plot",
x = NULL,
y = "Estimated parameter",
color = NULL) +
theme(legend.position = "bottom")
?amelia
biden_puted <- amelia(preds,
sqrts = c("age", "educ"),
noms = c("female", "dem", "rep"))
models_puted <- data_frame(data = biden_puted$imputations) %>%
mutate(model = map(data, ~ lm(biden ~ age +
educ + female,
data = .x)),
coef = map(model, broom::tidy)) %>%
unnest(coef, .id = "id")
biden_puted <- amelia(preds,
sqrts = c("age", "educ"),
noms = c("female", "dem", "rep"))
models_puted <- data_frame(data = biden_puted$imputations) %>%
mutate(model = map(data, ~ lm(biden ~ age +
educ + female,
data = .x)),
coef = map(model, broom::tidy)) %>%
unnest(coef, .id = "id")
biden_puted$message
preds <- biden_dat %>%
select(biden, age, educ, female, dem, rep)
hzTest(preds %>%
select(-c(biden, female, dem, rep)))
uniNorm(preds %>%
na.omit() %>%
select(-c(biden, female, dem, rep), type = "SQ", desc = FALSE))
preds
?uniNorm
uniNorm(preds %>%
na.omit() %>%
select(-c(biden, female, dem, rep), type = "SW", desc = FALSE))
biden_puted <- amelia(preds,
sqrts = c("age", "educ"),
noms = c("female", "dem", "rep"))
mi.meld.plus <- function(df_tidy){
# transform data into appropriate matrix shape
coef.out <- df_tidy %>%
select(id:estimate) %>%
spread(term, estimate) %>%
select(-id)
se.out <- df_tidy %>%
select(id, term, std.error) %>%
spread(term, std.error) %>%
select(-id)
combined.results <- mi.meld(q = coef.out, se = se.out)
data_frame(term = colnames(combined.results$q.mi),
estimate.mi = combined.results$q.mi[1, ],
std.error.mi = combined.results$se.mi[1, ])
}
broom::tidy(lm_init_biden) %>%
left_join(mi.meld.plus(models_puted)) %>%
select(-statistic, -p.value)
to_plot <- bind_rows(orig = tidy(lm_init_biden),
mult_imp = mi.meld.plus(models_puted) %>%
rename(estimate = estimate.mi,
std.error = std.error.mi),
.id = "method") %>%
mutate(method = factor(method, levels = c("orig", "mult_imp"),
labels = c("Listwise deletion", "Multiple imputation")),
term = factor(term, levels = c("(Intercept)", "age",
"female", "educ"),
labels = c("Intercept", "Age", "Female",
"Educ"))) %>%
filter(term != "Intercept")
to_plot %>%
ggplot(aes(fct_rev(term), estimate, color = fct_rev(method),
ymin = estimate - 1.96 * std.error,
ymax = estimate + 1.96 * std.error)) +
geom_hline(yintercept = 0, linetype = 2) +
geom_pointrange(position = position_dodge(.75)) +
coord_flip() +
scale_color_discrete(guide = guide_legend(reverse = TRUE)) +
labs(title = "Comparing regression results",
subtitle = "Omitting intercept from plot",
x = NULL,
y = "Estimated parameter",
color = NULL) +
theme(legend.position = "bottom")
biden_puted <- amelia(preds,
sqrts = c("age", "educ"),
noms = c("female", "dem", "rep"), p2s = 0)
??hat
?hat
hatvalues
?hatvalues
years_data <- list(1967 = "hey", 1968 = "ho")
years_data <- list(1967 = "hey", 1968 = "ho")
?list
install.packages("rPython")
install.packages("rPython")
install.packages("feather")
??ineq
install.packages("ineq")
t = c(1,1,1,1,1, 0)
ineq(t, type = "gini")
library(ineq)
ineq(t, type = "gini")
ineq(t, type = "Gini")
setwd("~/MACS30200proj/MethodsResults")
dat_cmv_subs <- read_csv("changemyview/cmv_subs.csv")
knitr::opts_chunk$set(message = FALSE,
warning = FALSE,
echo = FALSE)
library(tidyverse)
library(purrr)
library(lmtest)
theme_set(theme_minimal())
dat_cmv_subs <- read_csv("changemyview/cmv_subs.csv")
dat_cmv_auth_subs <- read_csv("changemyview/cmv_subs.csv")
dat_cmv_subs
dat_cmv_subs %>% group_by(OP_gave_delta)
dat_cmv_subs %>% group_by(OP_gave_delta) %>% summarise(count = n(), prop = count / sum(count))
dat_cmv_subs %>% group_by(OP_gave_delta) %>% summarise(count = n(), prop = count / n())
dat_cmv_subs %>% group_by(OP_gave_delta) %>% summarise(count = n(), prop = count / sum(count))
dat_cmv_subs %>% group_by(OP_gave_delta) %>% summarise(count = n()) %>% mutate(prop = count / sum(count))
sumry_gave_delta <- dat_cmv_subs %>%
group_by(OP_gave_delta) %>%
summarise(count = n()) %>%
mutate(prop = count / sum(count))
sumry_gave_delta
sumry_gave_delta$count
sumry_gave_delta <- dat_cmv_subs %>%
group_by(OP_gave_delta) %>%
summarise(count = n()) %>%
mutate(prop = count / sum(count))
dat_cmv_subs <- read_csv("changemyview/cmv_subs.csv")
dat_cmv_auth_subs <- read_csv("changemyview/cmv_subs.csv")
sumry_gave_delta <- dat_cmv_subs %>%
group_by(OP_gave_delta) %>%
summarise(count = n()) %>%
mutate(prop = count / sum(count))
knitr::opts_chunk$set(message = FALSE,
warning = FALSE,
echo = FALSE)
library(tidyverse)
library(purrr)
library(lmtest)
theme_set(theme_minimal())
dat_cmv_subs <- read_csv("changemyview/cmv_subs.csv") %>%
mutate(OP_gave_delta = ifelse(OP_gave_delta = "True", TRUE, FALSE))
knitr::opts_chunk$set(message = FALSE,
warning = FALSE,
echo = FALSE)
library(tidyverse)
library(purrr)
library(lmtest)
theme_set(theme_minimal())
dat_cmv_subs <- read_csv("changemyview/cmv_subs.csv") %>%
mutate(OP_gave_delta = ifelse(OP_gave_delta == "True", TRUE, FALSE))
dat_cmv_auth_subs <- read_csv("changemyview/cmv_subs.csv")
sumry_gave_delta <- dat_cmv_subs %>%
group_by(OP_gave_delta) %>%
summarise(count = n()) %>%
mutate(prop = count / sum(count))
sumry_gave_delta <- dat_cmv_subs %>%
group_by(OP_gave_delta) %>%
summarise(count = n()) %>%
mutate(prop = count / sum(count))
knitr::opts_chunk$set(message = FALSE,
warning = FALSE,
echo = FALSE)
library(tidyverse)
library(purrr)
library(lmtest)
theme_set(theme_minimal())
dat_cmv_subs <- read_csv("changemyview/cmv_subs.csv") %>%
mutate(OP_gave_delta = ifelse(OP_gave_delta == "True", TRUE, FALSE))
dat_cmv_auth_subs <- read_csv("changemyview/cmv_subs.csv")
sumry_gave_delta <- dat_cmv_subs %>%
group_by(OP_gave_delta) %>%
summarise(count = n()) %>%
mutate(prop = count / sum(count))
sumry_gave_delta
q()
